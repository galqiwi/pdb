#!/bin/bash
# поиск задач по тегам

# функция для создания предварительного pdf

pdb-pdf-create () {
    FILE=sel_tags
    
    id=("$@")
    rm $FILE.tex
    touch $FILE.tex

    cat "header.tex" >> $FILE.tex 
    
    for index in $(seq 0 $((${#id[@]}-1)))
    do
	echo "\setcounter{notask}{${id[$index]}}" >> $FILE.tex

	# копируем тело задачи в общий файл
	echo "\input{problems/${id[$index]}.tex}" >> $FILE.tex
	echo -e "\n" >> $FILE.tex
	
	# пишем теги под каждой задачей
	echo -e "\\\vspace{0.1cm} Ключевые слова: \\\textbf{ $(sed -n ${id[$index]}p pdb) } \\\vspace{0.1cm}" >> $FILE.tex
	echo -e "\n" >> $FILE.tex
    done

    # компиляция итогового файла и его показ 
    echo "\end{document}" >> $FILE.tex
    pdflatex -synctex=1 $FILE.tex
    ./pdb-open $FILE.pdf &
}

# сейчас надо сделать bash-команду, которая искала бы номера задач по заданному массиву тегов
# это начало этой команды: отправляем файл pdb (с номерами задач и соответствующими тегами) на выход
com="cat pdb"

# собираем все запрашиваемые теги в массив tags
tags=("$@")

# составляем большую поисковую команду с grep'ом
# сколько тегов в запросе - столько и grep'ов будет
for index in $(seq 0 $((${#tags[@]}-1)))
do
    com=${com}" | grep '[[:space:]]${tags[$index]}\b'"
done

# на выходе поиска нам нужен только номер задачи
com=${com}" | cut -f 1 -d ' '"

# теперь надо запустить эту команду; подходящие номера задач собираются в массиве tasks
# а количество найденных задач - в переменной ntasks
tasks=$(eval "$com")
ntasks=$(echo "$tasks" | grep -c '.')

# теперь надо проверить, нашли ли мы что-нибудь
if [[ "$ntasks" -eq 0 ]]
then
    echo "Подходящих задач не найдено."
else
    echo "Найдено задач: $ntasks"
    echo -e "Номера подходящих задач:\n$tasks"
    pdb-pdf-create $tasks    
fi
